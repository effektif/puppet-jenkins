<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description><%= @description %></description>
<% if !@log_rotator.empty? -%>
  <logRotator>
    <daysToKeep><%= @log_rotator["days_to_keep"] %></daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
<% end -%>
  <keepDependencies>false</keepDependencies><% if !@properties.empty? %>
    <properties>
       <hudson.model.ParametersDefinitionProperty>
         <parameterDefinitions><% @properties.each do |param| %><% if param["type"].eql?("string") %>
               <hudson.model.StringParameterDefinition>
                 <name><%= param["name"] %></name>
                 <description><%= param["description"] %></description>
                 <defaultValue><%= param["default_value"] %></defaultValue>
               </hudson.model.StringParameterDefinition> <% end %><% if param["type"].eql?("choice") %>
               <hudson.model.ChoiceParameterDefinition>
                 <name><%= param["name"] %></name>
                 <description><%= param["description"] %></description>
                 <choices class="java.util.Arrays$ArrayList">
                   <a class="string-array"><% param["choices"].each do |choice| %>
                       <string><%= choice %></string><% end %>
                    </a>
                  </choices>
               </hudson.model.ChoiceParameterDefinition><% end %><% end %>
         </parameterDefinitions>
       </hudson.model.ParametersDefinitionProperty>
    </properties><% else %>
 <properties/><% end %>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.1.26">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url><%= @git_repo %></url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name><%= @git_branch %></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean><%= @git_clean %></clean>
    <wipeOutWorkspace><%= @git_wipe_out_workspace %></wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>True</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
<% if @poll || build_schedule || !url_trigger.empty? -%>
    <triggers class="vector">
    <% if @poll -%>
    <hudson.triggers.SCMTrigger>
      <spec>*/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
    <% end -%>
    <% if @build_schedule -%>
    <hudson.triggers.TimerTrigger>
      <spec><%= @build_schedule %></spec>
    </hudson.triggers.TimerTrigger>
    <% end -%>
    <% if !@url_trigger.empty? -%>
    <org.jenkinsci.plugins.urltrigger.URLTrigger plugin="urltrigger@0.27">
      <spec>*/15 * * * *</spec>
      <entries>
        <org.jenkinsci.plugins.urltrigger.URLTriggerEntry>
          <url><%= @url_trigger["url"] %></url>
          <proxyActivated>false</proxyActivated>
          <checkStatus>false</checkStatus>
          <statusCode>200</statusCode>
          <timeout>300</timeout>
          <checkETag>false</checkETag>
          <checkLastModificationDate>false</checkLastModificationDate>
          <inspectingContent>true</inspectingContent>
          <contentTypes>
            <org.jenkinsci.plugins.urltrigger.content.SimpleContentType/>
          </contentTypes>
        </org.jenkinsci.plugins.urltrigger.URLTriggerEntry>
      </entries>
      <labelRestriction>false</labelRestriction>
    </org.jenkinsci.plugins.urltrigger.URLTrigger>
  <% end -%><% if !@script_trigger.empty? -%>
    <org.jenkinsci.plugins.scripttrigger.ScriptTrigger plugin="scripttrigger@0.21">
      <spec><%= script_trigger["schedule"] %></spec>
      <labelRestriction>false</labelRestriction>
      <enableConcurrentBuild>false</enableConcurrentBuild>
      <script><%= script_trigger["script"] %></script>
      <exitCode><%= script_trigger["exitcode"] %></exitCode>
    </org.jenkinsci.plugins.scripttrigger.ScriptTrigger>
    <% end -%>
  </triggers>
<% else -%>
  <triggers class="vector"/>
<% end -%>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command><%= @command %></command>
    </hudson.tasks.Shell>
  </builders>
<% if @triggers.any? || @html_publisher.any? || @artifacts || @nag_devchat || @chuck_norris -%>
  <publishers>
    <% if @triggers.any? -%>
      <hudson.tasks.BuildTrigger>
        <childProjects><%= triggers.join(",") %></childProjects>
        <threshold>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
        </threshold>
      </hudson.tasks.BuildTrigger>
    <% end -%>
    <% if @artifacts -%>
    <hudson.tasks.ArtifactArchiver>
      <artifacts><%= artifacts %></artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <% end -%>
    <% if !@junit_result.empty? %>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults><%= @junit_result["xml_file"] %></testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <% end %>
    <% if !@image_gallery.empty? %>
      <org.jenkinsci.plugins.imagegallery.ImageGalleryRecorder plugin="image-gallery@1.0">
        <imageGalleries>
          <org.jenkinsci.plugins.imagegallery.imagegallery.ArchivedImagesGallery>
            <title><%= image_gallery["title"] %></title>
            <includes><%= image_gallery["includes"] %></includes>
            <imageWidth>100</imageWidth>
             <markBuildAsUnstableIfNoArchivesFound>false</markBuildAsUnstableIfNoArchivesFound>
          </org.jenkinsci.plugins.imagegallery.imagegallery.ArchivedImagesGallery>
        </imageGalleries>
      </org.jenkinsci.plugins.imagegallery.ImageGalleryRecorder>
    <% end %>
    <% if @html_publisher.any? -%>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.2">
      <reportTargets>
          <% @html_publisher.each do |html| -%>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName><%= html["report_name"] %></reportName>
          <reportDir><%= html["report_dir"] %></reportDir>
          <reportFiles><%= html["report_files"] %></reportFiles>
          <keepAll><%= html["keep_all"] %></keepAll>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
          <% end %>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <% end -%>
    <%- if @nag_devchat -%>
    <hudson.plugins.jabber.im.transport.JabberPublisher plugin="jabber@1.25">
      <targets>
        <hudson.plugins.im.GroupChatIMMessageTarget plugin="instant-messaging@1.25">
          <name>dev@conference.braintreepayments.com</name>
          <notificationOnly>false</notificationOnly>
        </hudson.plugins.im.GroupChatIMMessageTarget>
      </targets>
      <strategy>FAILURE_AND_FIXED</strategy>
      <notifyOnBuildStart>false</notifyOnBuildStart>
      <notifySuspects>false</notifySuspects>
      <notifyCulprits>false</notifyCulprits>
      <notifyFixers>false</notifyFixers>
      <notifyUpstreamCommitters>false</notifyUpstreamCommitters>
      <buildToChatNotifier class="hudson.plugins.im.build_notify.SummaryOnlyBuildToChatNotifier" plugin="instant-messaging@1.25"/>
      <matrixMultiplier>ONLY_CONFIGURATIONS</matrixMultiplier>
    </hudson.plugins.jabber.im.transport.JabberPublisher>
    <%- end -%>
    <% if @chuck_norris %>
    <hudson.plugins.chucknorris.CordellWalkerRecorder plugin="chucknorris@0.5">
      <factGenerator/>
    </hudson.plugins.chucknorris.CordellWalkerRecorder>
    <% end %>
    <% if @email_notification %>
    <hudson.tasks.Mailer plugin="mailer@1.5">
          <recipients><%= @email_notification %></recipients>
          <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
          <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <% end %>
    <% if @cobertura %>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.1">
          <coberturaReportFile><%= @cobertura['coverage_file'] %></coberturaReportFile>
          <onlyStable>true</onlyStable>
          <failUnhealthy>false</failUnhealthy>
          <failUnstable>false</failUnstable>
          <autoUpdateHealth>false</autoUpdateHealth>
          <autoUpdateStability>false</autoUpdateStability>
          <zoomCoverageChart>false</zoomCoverageChart>
          <maxNumberOfBuilds>0</maxNumberOfBuilds>
          <failNoReports>true</failNoReports>
          <healthyTarget>
            <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>8000000</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>8000000</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>7000000</int>
              </entry>
            </targets>
          </healthyTarget>
          <unhealthyTarget>
            <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
            </targets>
          </unhealthyTarget>
          <failingTarget>
            <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
              <entry>
                <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
                <int>0</int>
              </entry>
            </targets>
          </failingTarget>
          <sourceEncoding>ASCII</sourceEncoding>
        </hudson.plugins.cobertura.CoberturaPublisher>
        <% end %>
  </publishers>
<% else -%>
  <publishers/>
<% end -%>
  <buildWrappers>
    <% if @random_ports.any? -%>
      <org.jvnet.hudson.plugins.port__allocator.PortAllocator>
        <ports>
          <% random_ports.each do |port| %>
            <org.jvnet.hudson.plugins.port__allocator.DefaultPortType>
              <name><%= port %></name>
            </org.jvnet.hudson.plugins.port__allocator.DefaultPortType>
          <% end %>
        </ports>
      </org.jvnet.hudson.plugins.port__allocator.PortAllocator>
    <% end %>
  </buildWrappers>
</project>
